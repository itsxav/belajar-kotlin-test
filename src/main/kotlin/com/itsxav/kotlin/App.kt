/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.itsxav.kotlin

class App {
    val greeting: String
        get() {
            return "Hello world."
        }
}

class  User(val name: String, val age: Int ){
    override fun toString(): String {
        return "User (name=$name, age=$age)"
    }
}

//Destructoring Object Oriented in Javascript
//const user = {
//    name: "xav"
//    age: 27
//}
//const (name, age) = user

data class  DataUser(val name: String, val age: Int) {
    fun intro(){
        println("hi its me is $name")
    }
}

fun main(args: Array<String>) {
//    println(App().greeting) 1
    val user = User("Harke", 21)
    val dataUser = DataUser("Harke", 21)

    println(user)
    println(dataUser)

    val ( name, age ) = dataUser
    println("Perkenalkan nama saya $name")

    dataUser.intro()

    //Collections
    val numberList : List<Int> = listOf(1, 2, 3, 4, 5)
    println(numberList)
    println(numberList[2])

    //List
    val anyList = mutableListOf(1, "A", "Kotlin", true)
    anyList.add(4, false)
    anyList.add(5, "Programming")
    println(anyList)

    //Set
    val integerSet = setOf(1, 2, 3 ,4, 1, 5)
    println(integerSet)

    val setA = setOf(1, 2, 3, 4)
    val setB = setOf(3, 4, 2, 1)
    println(setA == setB)

    val mutableSet = mutableSetOf(1, 2 ,3 , 3, 4, 4)

    mutableSet.add(6)
    println(mutableSet)
    mutableSet.remove(4)
    println(mutableSet)


    //Map
    //key-value
    val capital = mapOf(
        "Jakarta" to "Indonesia",
        "London" to "England",
        "New Delhi" to "India"
    )

    println(capital["Jakarta"])
    println(capital.getValue("Jakarta"))


}
